esta es historia 2

este cambio no va al head por el momento, ahora si va al master

-- basico local
git init
git config --list
git config email "email@email.com" | git config --global email "email@email.com"
git config name "nombre" | git config --global name "nombre"
git add [nombre archivo] | git add .
git commit -m "[mensaje]"
git status
git log | git log [nombre archivo]
git log --stat
git log --all --graph --decorate --oneline
git checkout: traer cambio realizados

-- movernos en la historia
git checkout [id del commit]
git reset --hard  {borra todo lo que este en el staging y la de trabajo, sin posibilidad de recuperarlo}
git reset --mixed  {borra hasta el stagin, sin posibilidad de recuperarlo}
git reset --soft  {borra todo lo que este en el staging, sin posibilidad de recuperarlo}
git reset HEAD [nombre archivo] - quita el archivo del staging
git rm --cached [nombre archivo] - quita el archivo del staging, pero queda en las versiones anteriores
git rm --force [nombre archivo] - quita el archivo del staging y del disco

-- trabajar con repositorios remotos
git clone [url del repositorio] -- clona un repositorio remoto
git push {envia los cambios al repositorio remoto}
git pull {obtiene los cambios de repositorio remoto, realiza un mefetch en el repositorio local y un merge en el area de trabajo}

--trabajo con ramas
git branch -- despliega la lista de ramas creadas, e indica cual es la activa
git branch [nombre rama] -- crea una rama nueva
git checkout [nombre rama] -- establece la rama de trabajo
git merge [nombre rama a integrar] -- mezcla los cambios de una rama a la rama de trabajo (rama activa)
git show-branch
git show-branch --all
git push origin [nombre branch]     [envia un branch al repositorio remoto]
gitk        [abre app de git para mostrar historia del repositorio]


--repositorios remotos
git remote [-v] -- ver si tiene un enlace a un repositorio remoto
git remote add [nombre remoto] [url remota] -- enlaza el repositorio remoto al repositorio local
git pull [nombre remoto] [branch remoto] --allow-unrelated-histories -- sincronizar historia de repositorios
git push [nombre remoto] [branch local] -- enviar cambios del local al remoto
git remote rm [nombre remoto] -- elimina un enlace remoto


Llave publicas y privadas
---
Generar una nueva llave SSH: (Cualquier sistema operativo)

ssh-keygen -t rsa -b 4096 -C "youremail@example.com"

Comprobar proceso y agregarlo (Windows)

    eval $(ssh-agent -s)
    si sale: No such file or directory, se debe niciar el servicio (win: OpenSSH Authentication Agent)

    ssh-add ~/.ssh/id_rsa

Comprobar proceso y agregarlo (Mac)

    eval "$(ssh-agent -s)"

¿Usas macOS Sierra 10.12.2 o superior?
Haz lo siguiente:

    cd ~/.ssh
    Crea un archivo config…
    Con Vim vim config
    Con VSCode code config
    Pega la siguiente configuración en el archivo…

    Host *
    AddKeysToAgent yes
    UseKeychain yes
    IdentityFile ~/.ssh/id_rsa

    Agrega tu llave
    ssh-add -K ~/.ssh/id_rsa


    -- Tags y versiones
    git tag
    git tag show-ref --tags   [ver enlace del tag con commit]
    git tag -a [nombretag] -m "mensaje" [hast proteccion]
    git push origin --tags
    git tag -d [nombretag]      [eliminar un tag]
    git push origin :refs/tags/[nombre tag a borrar]      [eliminar un tag en repo remoto]

    -- agregar colaboradores en proyecto git hub
    ir a setting del proyecto, ir a collaborators, buscar por email o por usuario github, agregar.

    -- trabajando con github
    hacer un fork --> copiar todo un proyecto (con ramas y historia) a un repositorio personal de github
    -hacer fork remoto desde consola.
    git remote add [nombre_repo_remoto] [url_repo_remoto]
        ej: git remote upstream https://github.com/freddier/hyperblog
    
    -para mantener actualizado el fork
    hacer pull en el remoto [ej: upstream] y hacer merge a la rama local y luego push al remoto del fork.

    -para hacer una aportacion al proyecto original
    Se realiza un pull request desde el fork indicando los cambios, y se espera a que sea revisado y aprobado.
    -Video 29 pt.
    